#[include fdm_module.cfg] # Unused for the Prometheus MSLA, provided for reference

[mcu]
serial: /dev/ttyACM0

[printer]
kinematics: z_only
max_velocity: 1000
max_accel: 1000

[force_move]
enable_force_move: True

[pause_resume]

[virtual_sdcard]
path: ~/printer_data/gcodes

[temperature_sensor klipper_host]
sensor_type: temperature_host

# MCU temp graph can't be used alongside temperature_fan
#[temperature_sensor mcu]
#sensor_type: temperature_mcu

# Unused on the Prometheus MSLA, Z-only
#[stepper_x]
#enable_pin: !gpio6
#step_pin: gpio5
#dir_pin: gpio4
#microsteps: 16
#rotation_distance: 2.75
#endstop_pin: ^!gpio3
#position_endstop: 0
#position_min: 0
#position_max: 350

#[tmc2209 stepper_x]
#uart_pin: gpio10
##diag_pin: gpio7
#run_current: 1.1
#stealthchop_threshold: 999999

# unused on the Prometheus MSLA, Z-only
#[stepper_y]
#enable_pin: !gpio13
#step_pin: gpio12
#dir_pin: gpio11
#microsteps: 16
#rotation_distance: 2.75
#endstop_pin: ^!gpio2
#position_endstop: 0
#position_min: 0
#position_max: 350

#[tmc2209 stepper_y]
#uart_pin: gpio10
##diag_pin: gpio14
#run_current: 1.1
#stealthchop_threshold: 999999

[stepper_z]
enable_pin: !gpio22
step_pin: gpio17
dir_pin: gpio16
microsteps: 16
rotation_distance: 2 # ACME threaded rod from the BOM
#rotation_distance: 4 # ballscrew from the BOM
full_steps_per_rotation: 400 # 0.9 degree stepper motor
#full_steps_per_rotation: 200 # 1.8 degree stepper motor
endstop_pin: ^!gpio1
position_endstop: 0
#position_endstop: 350 # top-mounted endstop
position_min: 0
position_max: 350

## Apollo v3.5.1
#[tmc2209 stepper_z]
#uart_pin: gpio10
#diag_pin: gpio27
#run_current: 1.1
#stealthchop_threshold: 999999

# Apollo v3.5.2
[tmc2209 stepper_z]
uart_pin: gpio13
diag_pin: gpio23
run_current: 1.1
stealthchop_threshold: 999999

[output_pin UVLED]
pin: gpio29
pwm: True
value: 0
shutdown_value: 0 # Disable at emergency shutdown
cycle_time: 0.001 # PWM frequency : 0.001 = 1ms will give a base tone of 1kHz
scale: 1000 # PWM parameter will be in the range of (0-1000 Hz).

# Driven off the MCU temp, as a proxy for electronics bay temp
[temperature_fan exhaust_fans]
pin: gpio26 # FAN1 & FAN2
sensor_type: temperature_mcu
control: watermark
min_temp: 0
max_temp: 100
target_temp: 40

[fan_generic led_cooling]
pin: gpio25 # FAN3 & FAN4

# Unused by default
#[fan_generic extra_fans]
#pin: gpi024

[gcode_macro LED_FAN_ON]
gcode:
    SET_FAN_SPEED FAN=led_cooling SPEED=1

[gcode_macro LED_FAN_OFF]
gcode:
    SET_FAN_SPEED FAN=led_cooling SPEED=0

[gcode_macro MOVE_PLATE]
gcode:
    {% set Z = params.Z|default(0)|float %}
    {% set F = params.F|default(0)|float %}
    
    G1 Z{Z} F{F}
    M400
    RESPOND MSG="Z_move_comp"

[gcode_macro DWELL]
gcode:
    {% set P = params.P|default(0)|float %}

    G4 P{P}
    M400
    RESPOND MSG="Z_move_comp"

[gcode_macro HOME_AXIS]
gcode:
    G28 Z0
    M400
    RESPOND MSG="Z_move_comp"

[gcode_macro UVLED_ON]
gcode:
    SET_PIN PIN=UVLED VALUE=550 #This value can be tuned for faster curring 
    M400

[gcode_macro UVLED_OFF]
gcode:
    SET_PIN PIN=UVLED VALUE=0
	M400

[respond]
